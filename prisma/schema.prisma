generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

model User {
  id        String @id @default(cuid())
  email     String @unique
  firstName String
  lastName  String
  password  String
  role      Role   @default(MEMBER)

  // Relations
  projectsCreated Project[] @relation("ProjectCreator")
  projects        Project[] @relation("ProjectMembers")
  tasks           Task[]    @relation("AssignedTasks")
  comments        Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model Project {
  id          String  @id @default(cuid())
  name        String
  description String?
  createdById String

  // Relations
  createdBy User   @relation("ProjectCreator", fields: [createdById], references: [id], onDelete: Cascade)
  members   User[] @relation("ProjectMembers")
  tasks     Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdById])
}

model Task {
  id           String     @id @default(cuid())
  title        String
  description  String?
  status       TaskStatus @default(TODO)
  projectId    String
  assignedToId String?

  // Relations
  project    Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assignedTo User?     @relation("AssignedTasks", fields: [assignedToId], references: [id], onDelete: SetNull)
  comments   Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([projectId])
  @@index([assignedToId])
  @@index([status])
}

model Comment {
  id       String @id @default(cuid())
  content  String
  taskId   String
  authorId String

  // Relations
  task   Task @relation(fields: [taskId], references: [id], onDelete: Cascade)
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([taskId])
  @@index([authorId])
}
